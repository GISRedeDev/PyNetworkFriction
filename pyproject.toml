[project]
name = "net_friction"
version = "0.1.0"
description = "Utilities to calculate travel distance matrices weighted by incidents"
authors = [
    {name = "GISRedeDev", email = "dm@gisrede.com"},
    {name = "David Kerr", email = "dkerr83@gmail.com"}
]
requires-python = ">=3.11"
readme = "README.md"
license = {text = "MIT"}
dependencies = [
    "geopandas>=0.14.4",
    "momepy>=0.7.0",
    "pandana>=0.7",
    "networkx>=3.3",
    "rioxarray>=0.15.5",
    "python-dotenv>=1.0.1",
    "numpy==1.26.4",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm.dev-dependencies]
test = ["pytest"]
lint = ["black", "flake8", "isort", "mypy"]
doc = ["sphinx", "mkdocstrings", "mkdocstrings-python"]
dev = [
    "mkdocs>=1.6.0",
    "mkdocstrings>=0.25.1",
]

[tool.pdm]
distribution = true

[tool.pdm.scripts]
test = "pytest tests"
test_integration = "pytest tests -m integration"
black = "black net_friction/ tests/"
black-check = "black --check net_friction/ tests/"
flake8 = "flake8 net_friction tests"
flake8-check = "flake8 --count net_friction tests"
isort = "isort net_friction tests"
isort-check = "isort --check-only net_friction tests"
mypy = "mypy net_friction tests"
mypy-check = "mypy --check net_friction tests"
lint = {composite = ["black", "flake8", "isort", "mypy"]}
lint-check = {composite = ["black-check", "flake8-check", "isort-check", "mypy-check"]}

[tool.flake8]
max-line-length = 120

[tool.isort]
profile = "black"